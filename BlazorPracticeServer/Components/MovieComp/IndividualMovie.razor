<div class="individual-movie-container">
    <a class="movie-poster-cont" href="@_movieURL ">
        <img src="@Movie.Poster" alt="Poster" class="movie-poster" />
    </a>
    <p style="color: white">
        <a href="@_movieURL">
            <b>@_briefTitle</b> <br />
            <b>Release Date</b><br />
            : @Movie.ReleaseDate.ToString("MMMM,dd yyyy")<br />
        </a>
    </p>
    <br />
    @if (DisplayButtons)
    {
        @*<div class="button-group" style="position: relative; margin-top: 30px">
                <BSButton Color="Color.Info" @onclick="@(() => EditMoviePrompt.InvokeAsync(Movie))">Edit</BSButton>
                <BSButton Color="Color.Danger" @onclick="@(() => DeleteMoviePrompt.InvokeAsync(Movie))">Delete</BSButton>
            </div>*@
    }

</div>
@code{
    [Parameter]
    public Movie Movie { get; set; }
    [Parameter]
    public bool DisplayButtons { get; set; }
    // event callback, bring the method from parent component, and on certain condition, invoke it.
    [Parameter] public EventCallback<Movie> DeleteMoviePrompt { get; set; }
    [Parameter] public EventCallback<Movie> EditMoviePrompt { get; set; }

    private string _briefTitle = string.Empty;

    private string _movieURL = string.Empty;

    protected override void OnInitialized()
    {
        _movieURL = $"movie/detail/{Movie.Id}/{Movie.Title.Replace(" ", "-")}";
    }
    protected override void OnParametersSet()
    {
        // shorten the title that has length over 10
        _briefTitle = Movie.Title.Length < 10 ? Movie.Title : Movie.Title.Substring(0, 10);
    }
}
