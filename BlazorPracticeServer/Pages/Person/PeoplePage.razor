@page "/people"
@using BlazorPracticeServer.Services
@using BlazorPracticeServer.Entity.Dtos
@using BlazorPracticeServer.Components.PersonComp
<div style="display: flex; flex-direction: column; align-items: center ; text-align:center">
    <div class="form-group">
        <a class="btn btn-info" href="person/create">New Person</a>
    </div>

    @if (People == null)
    {
        <text>loading...</text>
    }
    else
    {

        <Pagination CurrentPage="paginationDto.PageNumber" TotalAmountOfPages="10" Radius="1" SelectedPage="SelectedPage"></Pagination>

        <PeopleList People="People" OnEditClicked="GoToEditPage" OnDeleteClicked="DeletePerson"></PeopleList>
    }
</div>


@code {

    private List<Person> People;

    [Inject]
    public IPersonService PersonService { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    public PaginationDto paginationDto { get; set; } = new PaginationDto() { RecordsPerPage = 10 };



    protected async override Task OnInitializedAsync()
    {
        await LoadPeople();
    }

    private async Task SelectedPage(int page)
    {
        paginationDto.PageNumber = page;
        await LoadPeople();
    }

    private async Task LoadPeople()
    {
        People = (await PersonService.RetrieveAllPersonAsync(paginationDto)).ToList();
    }

    private async Task GoToEditPage(int personId)
    {
        NavigationManager.NavigateTo($"/person/detail/{personId}");
    }

    private async Task DeletePerson(int personId)
    {
        await PersonService.DeletePersonAsync(personId);
    }
}
